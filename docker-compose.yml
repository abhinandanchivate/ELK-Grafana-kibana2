version: "3.8"

services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: orders_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - elk-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=changeme
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml

    networks:
      - elk-net

  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.2
    container_name: logstash
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - elk-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk-net

  ktor-app:
    image: user-service:latest
    ports:
      - "8081:8081"
    container_name: ktor-app
    environment:
      KTOR_DEPLOYMENT_PORT: 8081
      KTOR_DEPLOYMENT_HOST: 0.0.0.0
    volumes:
      - ./logs:/var/log/ktor-app
    networks:
      - elk-net

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.6.2
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/var/log/ktor-app
    depends_on:
      - elasticsearch
      - logstash
    networks:
      - elk-net
volumes:
  postgres_data:
    driver: local

networks:
  elk-net:
    driver: bridge
